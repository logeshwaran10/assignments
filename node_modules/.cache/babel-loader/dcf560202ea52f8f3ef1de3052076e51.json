{"ast":null,"code":"var _jsxFileName = \"/Users/logeshwaran/demo2/src/Component/register.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport '../styles/register.css';\nimport React from 'react';\nimport { Form, Input, InputNumber, Button, AutoComplete, Card } from 'antd';\nimport { Link } from 'react-router-dom';\nimport Signin from './signin';\nimport { useSelector } from 'react-redux';\nimport store from '../store';\nimport actions from '../actions/Actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const loader = useSelector(state => state.loader);\n\n  const onFinish = e => {\n    console.log(\"onFinish\", e);\n    store.dispatch({\n      type: actions.REGISTER_USER,\n      payload: e\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'form-layout',\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"register\",\n          onFinish: onFinish,\n          initialValues: '',\n          className: 'register-form',\n          layout: \"vertical\",\n          requiredMark: false,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: 'title',\n              children: [\"Welcome \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this), \"Keep your notes here!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"firstname\",\n            label: \"Firstname\",\n            rules: [{\n              required: true,\n              message: 'Please input your firstname!',\n              whitespace: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: 'Firstname'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"lastname\",\n            label: \"Lastname\",\n            rules: [{\n              required: true,\n              message: 'Please input your lastname!',\n              whitespace: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: 'Lastname'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"email\",\n            label: \"Email\",\n            rules: [{\n              type: 'email',\n              message: 'The input is not valid E-mail!'\n            }, {\n              required: true,\n              message: 'Please input your E-mail!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: 'Email'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"password\",\n            label: \"Password\",\n            rules: [{\n              required: true,\n              message: 'Please input your password!'\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              placeholder: 'Password'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"confirm\",\n            label: \"Confirm password\",\n            dependencies: ['password'],\n            hasFeedback: true,\n            rules: [{\n              required: true,\n              message: 'Please confirm your password!'\n            }, _ref => {\n              let {\n                getFieldValue\n              } = _ref;\n              return {\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                }\n\n              };\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              placeholder: 'Confirm password'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              loading: loader,\n              className: 'register-btn',\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            className: 'singin-link',\n            children: [\"Already have an account ? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: '/',\n              children: \"Singin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"WqCZbg5ODRD796S/Sk1xE6CTU3w=\", false, function () {\n  return [useSelector];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/logeshwaran/demo2/src/Component/register.js"],"names":["React","Form","Input","InputNumber","Button","AutoComplete","Card","Link","Signin","useSelector","store","actions","Register","loader","state","onFinish","e","console","log","dispatch","type","REGISTER_USER","payload","required","message","whitespace","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAO,wBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,IADJ,EAEIC,KAFJ,EAGIC,WAHJ,EAIIC,MAJJ,EAKIC,YALJ,EAMIC,IANJ,QAOO,MAPP;AAQA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAkB,UAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAMC,MAAM,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,MAAlB,CAA1B;;AACA,QAAME,QAAQ,GAAGC,CAAD,IAAO;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,CAAxB;AACAN,IAAAA,KAAK,CAACS,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAET,OAAO,CAACU,aADH;AAEXC,MAAAA,OAAO,EAAEN;AAFE,KAAf;AAIH,GAND;;AAQA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA,6BACI,QAAC,IAAD;AAAA,+BACA,QAAC,IAAD;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,QAAQ,EAAED,QAFd;AAGI,UAAA,aAAa,EAAE,EAHnB;AAII,UAAA,SAAS,EAAE,eAJf;AAKI,UAAA,MAAM,EAAC,UALX;AAMI,UAAA,YAAY,EAAE,KANlB;AAAA,kCAQI,QAAC,IAAD,CAAM,IAAN;AAAA,mCACI;AAAG,cAAA,SAAS,EAAE,OAAd;AAAA,kDACY;AAAA;AAAA;AAAA;AAAA,sBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBARJ,eAaI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,IAAI,EAAC,WADT;AAEI,YAAA,KAAK,EAAC,WAFV;AAGI,YAAA,KAAK,EAAE,CACH;AACIQ,cAAAA,QAAQ,EAAE,IADd;AAEIC,cAAAA,OAAO,EAAE,8BAFb;AAGIC,cAAAA,UAAU,EAAE;AAHhB,aADG,CAHX;AAAA,mCAWI,QAAC,KAAD;AAAO,cAAA,WAAW,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,kBAbJ,eA0BI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,KAAK,EAAC,UAFV;AAGI,YAAA,KAAK,EAAE,CACH;AACIF,cAAAA,QAAQ,EAAE,IADd;AAEIC,cAAAA,OAAO,EAAE,6BAFb;AAGIC,cAAAA,UAAU,EAAE;AAHhB,aADG,CAHX;AAAA,mCAWI,QAAC,KAAD;AAAQ,cAAA,WAAW,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,kBA1BJ,eAuCI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,KAAK,EAAC,OAFV;AAGI,YAAA,KAAK,EAAE,CACH;AACIL,cAAAA,IAAI,EAAE,OADV;AAEII,cAAAA,OAAO,EAAE;AAFb,aADG,EAKH;AACID,cAAAA,QAAQ,EAAE,IADd;AAEIC,cAAAA,OAAO,EAAE;AAFb,aALG,CAHX;AAAA,mCAcI,QAAC,KAAD;AAAQ,cAAA,WAAW,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,kBAvCJ,eAwDI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,KAAK,EAAC,UAFV;AAGI,YAAA,KAAK,EAAE,CACH;AACID,cAAAA,QAAQ,EAAE,IADd;AAEIC,cAAAA,OAAO,EAAE;AAFb,aADG,CAHX;AASI,YAAA,WAAW,MATf;AAAA,mCAWI,QAAC,KAAD,CAAO,QAAP;AAAkB,cAAA,WAAW,EAAE;AAA/B;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,kBAxDJ,eAsEI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,IAAI,EAAC,SADT;AAEI,YAAA,KAAK,EAAC,kBAFV;AAGI,YAAA,YAAY,EAAE,CAAC,UAAD,CAHlB;AAII,YAAA,WAAW,MAJf;AAKI,YAAA,KAAK,EAAE,CACH;AACID,cAAAA,QAAQ,EAAE,IADd;AAEIC,cAAAA,OAAO,EAAE;AAFb,aADG,EAKH;AAAA,kBAAC;AAAEE,gBAAAA;AAAF,eAAD;AAAA,qBAAwB;AACpBC,gBAAAA,SAAS,CAACC,CAAD,EAAIC,KAAJ,EAAW;AAChB,sBAAI,CAACA,KAAD,IAAUH,aAAa,CAAC,UAAD,CAAb,KAA8BG,KAA5C,EAAmD;AAC/C,2BAAOC,OAAO,CAACC,OAAR,EAAP;AACH;;AAED,yBAAOD,OAAO,CAACE,MAAR,CAAe,IAAIC,KAAJ,CAAU,kDAAV,CAAf,CAAP;AACH;;AAPmB,eAAxB;AAAA,aALG,CALX;AAAA,mCAqBI,QAAC,KAAD,CAAO,QAAP;AAAiB,cAAA,WAAW,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA,kBAtEJ,eA6FI,QAAC,IAAD,CAAM,IAAN;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,SAAb;AAAuB,cAAA,QAAQ,EAAC,QAAhC;AAAyC,cAAA,OAAO,EAAGpB,MAAnD;AAA2D,cAAA,SAAS,EAAE,cAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA7FJ,eAkGI,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,SAAS,EAAE,aAAtB;AAAA,kEAC6B,QAAC,IAAD;AAAM,cAAA,EAAE,EAAE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA8GH;;GAxHQD,Q;UACUH,W;;;KADVG,Q;AA0HT,eAAeA,QAAf","sourcesContent":["import '../App.css';\nimport '../styles/register.css'\nimport React from 'react';\nimport {\n    Form,\n    Input,\n    InputNumber,\n    Button,\n    AutoComplete,\n    Card\n} from 'antd';\nimport {Link} from 'react-router-dom';\nimport Signin from'./signin';\nimport { useSelector } from 'react-redux';\nimport store from '../store'\nimport actions from '../actions/Actions';\n\n\nfunction Register() {\n    const loader = useSelector((state) => state.loader);\n    const onFinish =(e) => {\n        console.log(\"onFinish\", e);\n        store.dispatch({\n            type: actions.REGISTER_USER,\n            payload: e,\n        })\n    }\n\n    return (\n        <>\n            <div className={'form-layout'}>\n                <Card>\n                <Form\n                    name=\"register\"\n                    onFinish={onFinish}\n                    initialValues={''}\n                    className={'register-form'}\n                    layout=\"vertical\"\n                    requiredMark={false}\n                >\n                    <Form.Item>\n                        <p className={'title'}>\n                            Welcome <br/>Keep your notes here!\n                        </p>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"firstname\"\n                        label=\"Firstname\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your firstname!',\n                                whitespace: true,\n                            },\n                        ]}\n                    >\n                        <Input placeholder={'Firstname'}/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"lastname\"\n                        label=\"Lastname\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your lastname!',\n                                whitespace: true,\n                            },\n                        ]}\n                    >\n                        <Input  placeholder={'Lastname'}/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"email\"\n                        label=\"Email\"\n                        rules={[\n                            {\n                                type: 'email',\n                                message: 'The input is not valid E-mail!',\n                            },\n                            {\n                                required: true,\n                                message: 'Please input your E-mail!',\n                            },\n                        ]}\n                    >\n                        <Input  placeholder={'Email'} />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"password\"\n                        label=\"Password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                        hasFeedback\n                    >\n                        <Input.Password   placeholder={'Password'}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"Confirm password\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please confirm your password!',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(_, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n\n                                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password  placeholder={'Confirm password'}/>\n                    </Form.Item>\n                    <Form.Item >\n                        <Button type=\"primary\" htmlType=\"submit\" loading ={loader} className={'register-btn'}>\n                            Register\n                        </Button>\n                    </Form.Item>\n                    <Form.Item className={'singin-link'} >\n                       Already have an account ? <Link to={'/'}>Singin</Link>\n                    </Form.Item>\n                </Form>\n                </Card>\n            </div>\n        </>\n    );\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}